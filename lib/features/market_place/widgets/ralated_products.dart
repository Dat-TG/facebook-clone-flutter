import 'package:carousel_slider/carousel_slider.dart';
import 'package:facebook/constants/global_variables.dart';
import 'package:flutter/material.dart';

import '../../../models/product.dart';
import '../../../models/user.dart';
import '../screens/product_details_screen.dart';

class RelatedProducts extends StatefulWidget {
  const RelatedProducts({super.key});

  @override
  State<RelatedProducts> createState() => _RelatedProductsState();
}

class _RelatedProductsState extends State<RelatedProducts> {
  final List<Product> products = [
    Product(
      name:
          'Thu·ªëc Nhu·ªôm T√≥c M√†u XANH D∆Ø∆†NG ƒêEN KH√ìI, Xanh ƒêen Kh√≥i Kh√¥ng T·∫©y | Chenglovehair, Chenglovehairs',
      price: 160000,
      user:
          User(name: 'Minh H∆∞∆°ng', avatar: 'assets/images/user/minhhuong.jpg'),
      status: 'M·ªõi',
      description:
          'Thu·ªëc nhu·ªôm t√≥c m√†u Xanh D∆∞∆°ng ƒêen Kh√≥i kh√¥ng t·∫©y\nüíô Xanh D∆∞∆°ng ƒêen Kh√≥i tr·∫ßm h∆°n Light Blue Sea v√† s√°ng h∆°n Xanh Than - m·ªôt m√†u xanh c√¢n b·∫±ng ƒë·ªÉ ai c≈©ng c√≥ th·ªÉ nhu·ªôm ƒë∆∞·ª£c. ƒêi·ªÉm "ƒÉn kh√°ch" nh·∫•t ·ªü m√†u n√†y theo Cheng ch√≠nh l√† √°nh kh√≥i nh·∫π nh√†ng, gi√∫p cho m√°i t√≥c c√≥ ƒë·ªô b√≥ng c·ª±c k√¨ ·∫£o di·ªáu m√† v·∫´n gi·ªØ ƒë∆∞·ª£c n·ªÅn t·ªëi h·ª£p v·ªõi m·ªçi tone da.\nüíô Xanh D∆∞∆°ng ƒêen Kh√≥i mang v·∫ª ƒë·∫πp nƒÉng ƒë·ªông, hi·ªán ƒë·∫°i v√† c√° t√≠nh. Kh√¥ng ch·ªâ h·ª£p v·ªõi nh·ªØng chuy·∫øn du l·ªãch, ch·ª•p ·∫£nh, nhu·ªôm t√≥c m√†u Xanh D∆∞∆°ng ƒêen Kh√≥i nh·∫π c√≥ th·ªÉ di·ªán ƒëi h·ªçc, ƒëi l√†m m√† kh√¥ng b·ªã l·ªô li·ªÖu hay r·ª±c r·ª° qu√°.\nüíô Thu·ªëc nhu·ªôm Xanh D∆∞∆°ng ƒêen Kh√≥i ch·ªâ t·ª´ 65k. H√£y nh·∫Øn tin cho Cheng n·∫øu b·∫°n c·∫ßn t∆∞ v·∫•n th√™m v·ªÅ c√°ch nhu·ªôm t·∫°i nh√†.\nüî∏ T·∫∑ng ngay 1 l·ªç tr·ª£ d∆∞·ª°ng khi mua h√†ng\nüî∏ Ph√π h·ª£p v·ªõi m·ªçi tone da\nüî∏ L√™n t·ª´ n·ªÅn t√≥c ƒëen t·ª± nhi√™n kh√¥ng c·∫ßn n√¢ng t·∫©y\nüî∏ ƒê·ªô b·ªÅn m√†u: 1-1,5 th√°ng\nüî∏ C√°ch s·ª≠ d·ª•ng: tr·ªôn thu·ªëc nhu·ªôm t√≥c Xanh D∆∞∆°ng ƒêen Kh√≥i theo c√¥ng th·ª©c v√† l√†m theo c√°c b∆∞·ªõc nhu·ªôm. T·∫•t c·∫£ c√≥ trong h∆∞·ªõng d·∫´n ƒë√≠nh k√®m s·∫£n ph·∫©m.',
      location: 'H·ªì Ch√≠ Minh',
      images: [
        'https://down-vn.img.susercontent.com/file/vn-11134207-7qukw-lj2ffdt2aolo12',
        'https://down-vn.img.susercontent.com/file/vn-11134207-7qukw-lj2ffdssb37wc7',
        'https://down-vn.img.susercontent.com/file/vn-11134207-7qukw-lj2ffdssqjgs56',
        'https://down-vn.img.susercontent.com/file/vn-11134207-7qukw-lj2ffdsschsc07',
        'https://down-vn.img.susercontent.com/file/vn-11134207-7qukw-lj2ffdssdwcs54',
        'https://down-vn.img.susercontent.com/file/vn-11134207-7qukw-lj2ffdssfax8be',
        'https://down-vn.img.susercontent.com/file/vn-11134207-7qukw-lj2ffdssgpho9e',
      ],
    ),
    Product(
      name:
          'Set trang ph·ª•c n·ªØ MURIOKI g·ªìm √°o cardigan d·ªát kim d√°ng ng·∫Øn v√† ch√¢n v√°y ng·∫Øn √¥m h√¥ng th·ªùi trang',
      price: 149000,
      user: User(name: 'H√† Linhh', avatar: 'assets/images/user/halinh.jpg'),
      status: 'M·ªõi',
      description:
          'üëáChi ti·∫øt s·∫£n ph·∫©müëá\nM√†u s·∫Øc: H·ªìng/ khaki\nK√≠ch th∆∞·ªõc: S, M, L, XL,\nPhong c√°ch: G·ª£i c·∫£m\nCh√¢ÃÅt vaÃâi chiÃÅnh: S·ª£i polyester\nKi·ªÉu d√°ng: √îm s√°t\nLo·∫°i trang ph·ª•c: B·ªô ch√¢n v√°y\nH√¨nh d·∫°ng c·ªï √°o: C·ªï vu√¥ng\nChi·ªÅu d√†i tay √°o: Tay ng·∫Øn \nC√°c y·∫øu t·ªë ph·ªï bi·∫øn: D·ªát kim\nTh√≠ch h·ª£p cho: Ti·ªác t√πng, k·ª≥ ngh·ªâ, b√£i bi·ªÉn, h·∫πn h√≤',
      location: 'H·ªì Ch√≠ Minh',
      images: [
        'https://down-vn.img.susercontent.com/file/sg-11134211-7qvdl-lf0nyz2vq1yhc1',
        'https://down-vn.img.susercontent.com/file/a8916375b8b9a0770751a4ececca8604',
        'https://down-vn.img.susercontent.com/file/c7e3bc7cfbac3f913182aad21c7c9e5e',
        'https://down-vn.img.susercontent.com/file/10e207c47c07fffa110c5c208c7f58df',
      ],
    ),
    Product(
      name: 'V√°y kho√©t l∆∞ng Mina dress d√°ng d√†i ti·ªÉu th∆∞',
      price: 139000,
      user: User(
          name: 'Nguy·ªÖn Th·ªã Minh Tuy·ªÅn',
          avatar: 'assets/images/user/minhtuyen.jpg'),
      status: 'ƒê√£ qua s·ª≠ d·ª•ng - Nh∆∞ m·ªõi',
      description: 'S·∫£n ph·∫©m 100% gi·ªëng m√¥ t·∫£',
      location: 'ƒê·ªìng Nai',
      images: [
        'https://down-vn.img.susercontent.com/file/vn-11134207-7qukw-livgbmwjka8i3c',
        'https://down-vn.img.susercontent.com/file/vn-11134207-7qukw-livgbmwjhh3m53',
      ],
    ),
    Product(
      name: 'V√°y 2 d√¢y d√°ng d√†i chun l∆∞ng phong c√°ch H√†n Qu·ªëc',
      price: 129000,
      user: User(name: 'Kh√°nh Vy', avatar: 'assets/images/user/khanhvy.jpg'),
      status: 'M·ªõi',
      description:
          '- Ch·∫•t v·∫£i kaki h√†n qu·ªëc, v√°y m·ªÅm m·∫°i th√≠ch h·ª£p 4 m√πa\n- S·∫£n ph·∫©m 100% gi·ªëng m√¥ t·∫£. H√¨nh ·∫£nh s·∫£n ph·∫©m l√† ·∫£nh th·∫≠t do shop t·ª± ch·ª•p v√† gi·ªØ b·∫£n quy·ªÅn h√¨nh ·∫£nh\n- Xu·∫•t x·ª©: ƒë∆∞·ª£c thi·∫øt k·∫ø v√† gia c√¥ng b·ªüi xixeoshop.',
      location: 'C·∫ßn Th∆°',
      images: [
        'https://down-vn.img.susercontent.com/file/sg-11134201-22100-9uflrvt69piv6f',
        'https://down-vn.img.susercontent.com/file/sg-11134201-23010-gp0rfbdv8amve9',
        'https://down-vn.img.susercontent.com/file/sg-11134201-23010-kvpedtfw8amv59',
        'https://down-vn.img.susercontent.com/file/vn-11134201-7qukw-lere6ek7u2xj3b',
        'https://down-vn.img.susercontent.com/file/vn-11134201-7qukw-lere6ells1uf6e',
        'https://down-vn.img.susercontent.com/file/sg-11134201-22100-detjvwt69piv8a',
        'https://down-vn.img.susercontent.com/file/sg-11134201-23010-cgru6vuf0amv1b',
        'https://down-vn.img.susercontent.com/file/vn-11134201-7qukw-lere6e6mdz0q50',
      ],
    ),
  ];

  List<int> _current = [];
  @override
  void initState() {
    super.initState();
    _current = List.filled(products.length, 0);
  }

  @override
  Widget build(BuildContext context) {
    return Table(
      children: [
        for (int i = 0; i < products.length - 1; i += 2)
          TableRow(
            children: [
              TableCell(
                child: Padding(
                  padding: const EdgeInsets.only(
                    right: 10,
                    bottom: 10,
                  ),
                  child: Column(
                    children: [
                      Row(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          DecoratedBox(
                            decoration: BoxDecoration(
                              border:
                                  Border.all(color: Colors.black12, width: 1),
                              shape: BoxShape.circle,
                            ),
                            child: CircleAvatar(
                              backgroundImage:
                                  AssetImage(products[i].user.avatar),
                              radius: 15,
                            ),
                          ),
                          const SizedBox(
                            width: 10,
                          ),
                          Expanded(
                            child: Text(
                              products[i].user.name,
                              style: const TextStyle(
                                color: Colors.black,
                                fontSize: 15,
                                fontWeight: FontWeight.w500,
                                overflow: TextOverflow.ellipsis,
                              ),
                            ),
                          ),
                        ],
                      ),
                      const SizedBox(
                        height: 10,
                      ),
                      InkWell(
                        onTap: () {
                          Navigator.of(context).pushNamed(
                            ProductDetailsScreen.routeName,
                            arguments: products[i],
                          );
                        },
                        child: Column(
                          children: [
                            ClipRRect(
                              borderRadius: BorderRadius.circular(10),
                              child: Stack(
                                children: [
                                  CarouselSlider(
                                    items: products[i].images.map((e) {
                                      return Builder(
                                        builder: (BuildContext context) =>
                                            Image.network(
                                          e,
                                          fit: BoxFit.cover,
                                          width: double.infinity,
                                        ),
                                      );
                                    }).toList(),
                                    options: CarouselOptions(
                                      onPageChanged: (index, reason) {
                                        setState(() {
                                          _current[i] = index;
                                        });
                                      },
                                      height: 200,
                                      padEnds: false,
                                      scrollDirection: Axis.horizontal,
                                      clipBehavior: Clip.none,
                                      enableInfiniteScroll: false,
                                      viewportFraction: 1,
                                    ),
                                  ),
                                  Positioned.fill(
                                    bottom: 10,
                                    child: Align(
                                      alignment: Alignment.bottomCenter,
                                      child: Row(
                                        mainAxisSize: MainAxisSize.min,
                                        mainAxisAlignment:
                                            MainAxisAlignment.center,
                                        children: products[i]
                                            .images
                                            .asMap()
                                            .entries
                                            .map((entry) {
                                          return Container(
                                            width: 6,
                                            height: 6,
                                            margin: const EdgeInsets.symmetric(
                                                vertical: 5, horizontal: 3),
                                            decoration: BoxDecoration(
                                                shape: BoxShape.circle,
                                                color: Colors.white.withOpacity(
                                                    _current[i] == entry.key
                                                        ? 1
                                                        : 0.5)),
                                          );
                                        }).toList(),
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            const SizedBox(
                              height: 5,
                            ),
                            Row(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Expanded(
                                  child: Text(
                                    products[i].name,
                                    maxLines: 2,
                                    overflow: TextOverflow.ellipsis,
                                    style: const TextStyle(
                                        fontSize: 16,
                                        fontWeight: FontWeight.w500),
                                  ),
                                ),
                                const SizedBox(
                                  width: 10,
                                ),
                                const Icon(
                                  Icons.more_horiz_rounded,
                                  size: 16,
                                  color: GlobalVariables.iconColor,
                                ),
                              ],
                            )
                          ],
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              TableCell(
                child: Padding(
                  padding: const EdgeInsets.only(bottom: 10),
                  child: Column(
                    children: [
                      Row(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          DecoratedBox(
                            decoration: BoxDecoration(
                              border:
                                  Border.all(color: Colors.black12, width: 1),
                              shape: BoxShape.circle,
                            ),
                            child: CircleAvatar(
                              backgroundImage:
                                  AssetImage(products[i + 1].user.avatar),
                              radius: 15,
                            ),
                          ),
                          const SizedBox(
                            width: 10,
                          ),
                          Expanded(
                            child: Text(
                              products[i + 1].user.name,
                              style: const TextStyle(
                                color: Colors.black,
                                fontSize: 15,
                                fontWeight: FontWeight.w500,
                                overflow: TextOverflow.ellipsis,
                              ),
                            ),
                          ),
                        ],
                      ),
                      const SizedBox(
                        height: 10,
                      ),
                      InkWell(
                        onTap: () {
                          Navigator.of(context).pushNamed(
                            ProductDetailsScreen.routeName,
                            arguments: products[i + 1],
                          );
                        },
                        child: Column(
                          children: [
                            ClipRRect(
                              borderRadius: BorderRadius.circular(10),
                              child: Stack(
                                children: [
                                  CarouselSlider(
                                    items: products[i + 1].images.map((e) {
                                      return Builder(
                                        builder: (BuildContext context) =>
                                            Image.network(
                                          e,
                                          fit: BoxFit.cover,
                                          width: double.infinity,
                                        ),
                                      );
                                    }).toList(),
                                    options: CarouselOptions(
                                      onPageChanged: (index, reason) {
                                        setState(() {
                                          _current[i + 1] = index;
                                        });
                                      },
                                      height: 200,
                                      padEnds: false,
                                      scrollDirection: Axis.horizontal,
                                      clipBehavior: Clip.none,
                                      enableInfiniteScroll: false,
                                      viewportFraction: 1,
                                    ),
                                  ),
                                  Positioned.fill(
                                    bottom: 10,
                                    child: Align(
                                      alignment: Alignment.bottomCenter,
                                      child: Row(
                                        mainAxisSize: MainAxisSize.min,
                                        mainAxisAlignment:
                                            MainAxisAlignment.center,
                                        children: products[i + 1]
                                            .images
                                            .asMap()
                                            .entries
                                            .map((entry) {
                                          return Container(
                                            width: 6,
                                            height: 6,
                                            margin: const EdgeInsets.symmetric(
                                                vertical: 5, horizontal: 3),
                                            decoration: BoxDecoration(
                                                shape: BoxShape.circle,
                                                color: Colors.white.withOpacity(
                                                    _current[i + 1] == entry.key
                                                        ? 1
                                                        : 0.5)),
                                          );
                                        }).toList(),
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            const SizedBox(
                              height: 5,
                            ),
                            Row(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Expanded(
                                  child: Text(
                                    products[i + 1].name,
                                    maxLines: 2,
                                    overflow: TextOverflow.ellipsis,
                                    style: const TextStyle(
                                      fontSize: 16,
                                      fontWeight: FontWeight.w600,
                                    ),
                                  ),
                                ),
                                const SizedBox(
                                  width: 10,
                                ),
                                const Icon(
                                  Icons.more_horiz_rounded,
                                  size: 16,
                                  color: GlobalVariables.iconColor,
                                ),
                              ],
                            )
                          ],
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
      ],
    );
  }
}
